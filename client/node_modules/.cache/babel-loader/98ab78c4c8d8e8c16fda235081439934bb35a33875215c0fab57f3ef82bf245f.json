{"ast":null,"code":"import React from\"react\";import{Navigate}from\"react-router-dom\";import{AuthContext}from\"../context/AuthContext\";import{useContext,useState,useEffect}from\"react\";import axios from\"axios\";import Updateprofile from\"./Updateprofile\";import Updateinfo from\"./Updateinfo\";import Updatepassword from\"./Updatepassword\";import defaultProfileImage from\"./profile.jpg\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"bootstrap/dist/js/bootstrap.min.js\";import\"font-awesome/css/font-awesome.min.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=()=>{const{username,firstname,lastname,loggedIn,email,userroletype,companyName,UserRoleId}=useContext(AuthContext);const[showUpdateProfileModal,setShowUpdateProfileModal]=useState(false);const[showUpdateInfoModal,setShowUpdateInfoModal]=useState(false);const[showUpdatePasswordModal,setShowUpdatePasswordModal]=useState(false);const[profileImage,setProfileImage]=useState(null);const fetchUserProfile=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/getuserprofile\",// Update the URL based on your backend route\n{withCredentials:true,responseType:\"arraybuffer\"}// Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\n);if(response.status===200){// Access the binary data from the response\nconst imageData=response.data;console.log(\"imagedata\",imageData);// Convert the ArrayBuffer to a Blob\nconst blob=new Blob([imageData],{type:\"image/jpeg\"});// Replace 'image/jpeg' with the actual MIME type of your images\n// Create a Blob URL from the Blob\nconst blobUrl=URL.createObjectURL(blob);setProfileImage(blobUrl);console.log(\"Fetched user profile image data:\",blobUrl);// Update your UI or perform other actions with the fetched data\n}}catch(error){console.error(\"Error fetching user profile data:\",error);}};const updateUserProfile=async imageData=>{try{console.log(\"imageData\",imageData);const response=await axios.put(\"http://localhost:5000/api/updateuserprofile\",// Update the URL based on your backend route\nimageData,// Pass the Blob directly as the request body\n{withCredentials:true,headers:{\"Content-Type\":\"application/octet-stream\"// Set the content type to indicate a binary stream\n}});if(response.status===200){fetchUserProfile();console.log(\"User profile image updated successfully\");// Perform any additional actions or UI updates as needed\n}}catch(error){console.error(\"Error updating user profile image:\",error);}};useEffect(()=>{if(loggedIn){fetchUserProfile();}},[loggedIn]);if(!loggedIn){// If the user is not logged in, redirect to the login page\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-auto\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[username,\" Page\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",\"data-bs-theme\":\"dark\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary dropdown-toggle\",type:\"button\",id:\"dropdownMenuButton1\",\"data-bs-toggle\":\"dropdown\",\"aria-expanded\":\"false\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-edit fa-fw me-1\"}),\"Update\"]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"dropdown-menu\",\"aria-labelledby\":\"dropdownUpdateMenuButton\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",type:\"button\",onClick:()=>{setShowUpdateProfileModal(true);},children:\"Update Profile\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",type:\"button\",onClick:()=>{setShowUpdateInfoModal(true);},children:\"Update Info\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",type:\"button\",onClick:()=>{setShowUpdatePasswordModal(true);},children:\"Update Password\"})})]})]})]}),/*#__PURE__*/_jsx(Updateprofile,{showModal:showUpdateProfileModal,profileImage:profileImage,updateUserProfile:updateUserProfile,handleClose:()=>{setShowUpdateProfileModal(false);}}),/*#__PURE__*/_jsx(Updateinfo,{showModal:showUpdateInfoModal,handleClose:()=>{setShowUpdateInfoModal(false);}}),/*#__PURE__*/_jsx(Updatepassword,{showModal:showUpdatePasswordModal,handleClose:()=>{setShowUpdatePasswordModal(false);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"card position-relative\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center position-relative\",children:/*#__PURE__*/_jsx(\"img\",{src:profileImage||defaultProfileImage,alt:\"Profile\",className:\"img-fluid rounded-circle\",style:{width:\"200px\",height:\"200px\",border:\"2px solid #000\"}})}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-center mb-0\",children:username}),/*#__PURE__*/_jsxs(\"p\",{className:\"lead text-center mb-0\",children:[firstname,\" \",lastname]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted text-center\",children:userroletype})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-group list-group-flush\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-envelope me-2\"}),\"Email : \",email]}),/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-building me-2\"}),\"Company : \",companyName]}),/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-id-badge me-2 \"}),\"User Role :\",\" \",UserRoleId===2?\"Admin\":\"User\"]})]})]})]});};export default Profile;","map":{"version":3,"names":["React","Navigate","AuthContext","useContext","useState","useEffect","axios","Updateprofile","Updateinfo","Updatepassword","defaultProfileImage","jsx","_jsx","jsxs","_jsxs","Profile","username","firstname","lastname","loggedIn","email","userroletype","companyName","UserRoleId","showUpdateProfileModal","setShowUpdateProfileModal","showUpdateInfoModal","setShowUpdateInfoModal","showUpdatePasswordModal","setShowUpdatePasswordModal","profileImage","setProfileImage","fetchUserProfile","response","get","withCredentials","responseType","status","imageData","data","console","log","blob","Blob","type","blobUrl","URL","createObjectURL","error","updateUserProfile","put","headers","to","className","children","id","onClick","showModal","handleClose","src","alt","style","width","height","border"],"sources":["C:/Users/Administrator/Desktop/react-express/client/src/profile/Profile.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Updateprofile from \"./Updateprofile\";\r\nimport Updateinfo from \"./Updateinfo\";\r\nimport Updatepassword from \"./Updatepassword\";\r\nimport defaultProfileImage from \"./profile.jpg\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nconst Profile = () => {\r\n  const {\r\n    username,\r\n    firstname,\r\n    lastname,\r\n    loggedIn,\r\n    email,\r\n    userroletype,\r\n    companyName,\r\n    UserRoleId,\r\n  } = useContext(AuthContext);\r\n\r\n  const [showUpdateProfileModal, setShowUpdateProfileModal] = useState(false);\r\n  const [showUpdateInfoModal, setShowUpdateInfoModal] = useState(false);\r\n  const [showUpdatePasswordModal, setShowUpdatePasswordModal] = useState(false);\r\n  const [profileImage, setProfileImage] = useState(null);\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/getuserprofile\", // Update the URL based on your backend route\r\n        { withCredentials: true, responseType: \"arraybuffer\" } // Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Access the binary data from the response\r\n        const imageData = response.data;\r\n        console.log(\"imagedata\", imageData);\r\n\r\n        // Convert the ArrayBuffer to a Blob\r\n        const blob = new Blob([imageData], { type: \"image/jpeg\" }); // Replace 'image/jpeg' with the actual MIME type of your images\r\n\r\n        // Create a Blob URL from the Blob\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        setProfileImage(blobUrl);\r\n        console.log(\"Fetched user profile image data:\", blobUrl);\r\n\r\n        // Update your UI or perform other actions with the fetched data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user profile data:\", error);\r\n    }\r\n  };\r\n\r\n  const updateUserProfile = async (imageData) => {\r\n    try {\r\n      console.log(\"imageData\", imageData);\r\n      const response = await axios.put(\r\n        \"http://localhost:5000/api/updateuserprofile\", // Update the URL based on your backend route\r\n        imageData, // Pass the Blob directly as the request body\r\n\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Content-Type\": \"application/octet-stream\", // Set the content type to indicate a binary stream\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        fetchUserProfile();\r\n        console.log(\"User profile image updated successfully\");\r\n        // Perform any additional actions or UI updates as needed\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating user profile image:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      fetchUserProfile();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  if (!loggedIn) {\r\n    // If the user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-auto\">\r\n        <h2>{username} Page</h2>\r\n        <div className=\"dropdown\" data-bs-theme=\"dark\">\r\n          <button\r\n            className=\"btn btn-primary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"dropdownMenuButton1\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i className=\"fa fa-edit fa-fw me-1\"></i>Update\r\n          </button>\r\n          <ul\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"dropdownUpdateMenuButton\"\r\n          >\r\n            <li>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowUpdateProfileModal(true);\r\n                }}\r\n              >\r\n                Update Profile\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowUpdateInfoModal(true);\r\n                }}\r\n              >\r\n                Update Info\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowUpdatePasswordModal(true);\r\n                }}\r\n              >\r\n                Update Password\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Updateprofile\r\n        showModal={showUpdateProfileModal}\r\n        profileImage={profileImage}\r\n        updateUserProfile={updateUserProfile}\r\n        handleClose={() => {\r\n          setShowUpdateProfileModal(false);\r\n        }}\r\n      />\r\n      <Updateinfo\r\n        showModal={showUpdateInfoModal}\r\n        handleClose={() => {\r\n          setShowUpdateInfoModal(false);\r\n        }}\r\n      />\r\n\r\n      <Updatepassword\r\n        showModal={showUpdatePasswordModal}\r\n        handleClose={() => {\r\n          setShowUpdatePasswordModal(false);\r\n        }}\r\n      />\r\n\r\n      <div className=\"card position-relative\">\r\n        <div className=\"card-body\">\r\n          <div className=\"text-center position-relative\">\r\n            {/* Display Profile Image */}\r\n            <img\r\n              src={profileImage || defaultProfileImage}\r\n              alt=\"Profile\"\r\n              className=\"img-fluid rounded-circle\"\r\n              style={{\r\n                width: \"200px\",\r\n                height: \"200px\",\r\n                border: \"2px solid #000\",\r\n              }}\r\n            />\r\n          </div>\r\n          <h2 className=\"text-center mb-0\">{username}</h2>\r\n          <p className=\"lead text-center mb-0\">\r\n            {firstname} {lastname}\r\n          </p>\r\n          <p className=\"text-muted text-center\">{userroletype}</p>\r\n        </div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <i className=\"fa fa-envelope me-2\"></i>Email : {email}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <i className=\"fa fa-building me-2\"></i>Company : {companyName}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <i className=\"fa fa-id-badge me-2 \"></i>User Role :{\" \"}\r\n            {UserRoleId === 2 ? \"Admin\" : \"User\"}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}