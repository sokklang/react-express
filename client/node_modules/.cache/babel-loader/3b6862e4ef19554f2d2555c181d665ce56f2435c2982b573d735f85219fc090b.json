{"ast":null,"code":"import React,{useContext,useEffect,useState}from\"react\";//import { CompanyContext } from \"../context/CompanyContext\";\nimport{AuthContext}from\"../context/AuthContext\";import Updatecompanylogo from\"./Updatecompanylogo\";import Updatecompanyinfo from\"./Updatecompanyinfo\";import axios from\"axios\";import defaultCompanyLogo from\"./defaultlogo.png\";import{Navigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Company=()=>{//const { UpdateLogo } = useContext(CompanyContext);\nconst{loggedIn,companyName,companyAddress,companyindustry,handleCompanyInfoUpdateState}=useContext(AuthContext);const[imageLogo,setImageLogo]=useState(null);const[showUpdateCompanyLogoModal,setShowUpdateCompanyLogo]=useState(false);const[showUpateCompanyInfo,setShowUpdateCompanyInfo]=useState(false);const[successMessage,setSuccessMessage]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");const updateCompanyLogo=async LogoData=>{try{console.log(\"imageData\",LogoData);const response=await axios.put(\"http://localhost:5000/api/updatecompanylogo\",// Update the URL based on your backend route\nLogoData,// Pass the Blob directly as the request body\n{withCredentials:true,headers:{\"Content-Type\":\"application/octet-stream\"// Set the content type to indicate a binary stream\n}});if(response.status===200){console.log(\"Company Logo updated successfully\");getCompanyLogo();// Perform any additional actions or UI updates as needed\n}}catch(error){console.error(\"Error updating Company Logo image:\",error);}};const getCompanyLogo=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/getcompanylogo\",// Update the URL based on your backend route\n{withCredentials:true,responseType:\"arraybuffer\"}// Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\n);if(response.status===200){// Access the binary data from the response\nconst LogoData=response.data;console.log(\"imagedata\",LogoData);// Convert the ArrayBuffer to a Blob\nconst blob=new Blob([LogoData],{type:\"image/jpeg\"});// Replace 'image/jpeg' with the actual MIME type of your images\n// Create a Blob URL from the Blob\nconst blobUrl=URL.createObjectURL(blob);setImageLogo(blobUrl);console.log(\"Fetched Company Logo data:\",blobUrl);// Update your UI or perform other actions with the fetched data\n}}catch(error){console.error(\"Error fetching Company Logo data:\",error);throw error;}};const updateCompanyInfo=async companyinfo=>{try{const response=await axios.put(\"http://localhost:5000/api/updatecompanyinfo\",companyinfo,{withCredentials:true});console.log(companyinfo);if(response.status===200){console.log(response.data.message);handleCompanyInfoUpdateState(companyinfo);setSuccessMessage(response.data.message);setErrorMessage(\"\");}}catch(error){console.log(\"Error Updating Company Info:\",error);setErrorMessage(error.response.data.error);setSuccessMessage(\"\");}};useEffect(()=>{if(loggedIn){getCompanyLogo();}},[loggedIn]);if(!loggedIn){// If the user is not logged in, redirect to the login page\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-auto\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[companyName,\" Page\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",\"data-bs-theme\":\"dark\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary dropdown-toggle\",type:\"button\",\"data-bs-toggle\":\"dropdown\",\"aria-expanded\":\"false\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-edit fa-fw me-1\"}),\"Update\"]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"dropdown-menu\",\"aria-labelledby\":\"dropdownUpdateMenuButton\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",type:\"button\",onClick:()=>{setShowUpdateCompanyLogo(true);},children:\"Update Logo\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",type:\"button\",onClick:()=>{setShowUpdateCompanyInfo(true);},children:\"Update Info\"})})]})]})]}),/*#__PURE__*/_jsx(Updatecompanylogo,{showModal:showUpdateCompanyLogoModal,imageLogo:imageLogo,updateCompanyLogo:updateCompanyLogo,handleClose:()=>{setShowUpdateCompanyLogo(false);}}),/*#__PURE__*/_jsx(Updatecompanyinfo,{showModal:showUpateCompanyInfo,successMessage:successMessage,errorMessage:errorMessage,updateCompanyInfo:updateCompanyInfo,handleClose:()=>{setShowUpdateCompanyInfo(false);setErrorMessage(\"\");setSuccessMessage(\"\");}}),/*#__PURE__*/_jsx(\"div\",{className:\"card position-relative\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center position-relative\",children:/*#__PURE__*/_jsx(\"img\",{src:imageLogo||defaultCompanyLogo,alt:\"Profile\",className:\"img-fluid rounded-circle\",style:{width:\"200px\",height:\"200px\",border:\"2px solid #000\"}})}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-center mb-0\",children:companyName}),/*#__PURE__*/_jsx(\"p\",{className:\"lead text-center mb-0\",children:companyAddress}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted text-center\",children:companyindustry})]})})]});};export default Company;","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","Updatecompanylogo","Updatecompanyinfo","axios","defaultCompanyLogo","Navigate","jsx","_jsx","jsxs","_jsxs","Company","loggedIn","companyName","companyAddress","companyindustry","handleCompanyInfoUpdateState","imageLogo","setImageLogo","showUpdateCompanyLogoModal","setShowUpdateCompanyLogo","showUpateCompanyInfo","setShowUpdateCompanyInfo","successMessage","setSuccessMessage","errorMessage","setErrorMessage","updateCompanyLogo","LogoData","console","log","response","put","withCredentials","headers","status","getCompanyLogo","error","get","responseType","data","blob","Blob","type","blobUrl","URL","createObjectURL","updateCompanyInfo","companyinfo","message","to","className","children","onClick","showModal","handleClose","src","alt","style","width","height","border"],"sources":["C:/Users/Administrator/Desktop/react-express/client/src/company/Company.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\n//import { CompanyContext } from \"../context/CompanyContext\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport Updatecompanylogo from \"./Updatecompanylogo\";\r\nimport Updatecompanyinfo from \"./Updatecompanyinfo\";\r\nimport axios from \"axios\";\r\n\r\nimport defaultCompanyLogo from \"./defaultlogo.png\";\r\nimport { Navigate } from \"react-router-dom\";\r\nconst Company = () => {\r\n  //const { UpdateLogo } = useContext(CompanyContext);\r\n  const {\r\n    loggedIn,\r\n    companyName,\r\n    companyAddress,\r\n    companyindustry,\r\n    handleCompanyInfoUpdateState,\r\n  } = useContext(AuthContext);\r\n  const [imageLogo, setImageLogo] = useState(null);\r\n\r\n  const [showUpdateCompanyLogoModal, setShowUpdateCompanyLogo] =\r\n    useState(false);\r\n  const [showUpateCompanyInfo, setShowUpdateCompanyInfo] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const updateCompanyLogo = async (LogoData) => {\r\n    try {\r\n      console.log(\"imageData\", LogoData);\r\n      const response = await axios.put(\r\n        \"http://localhost:5000/api/updatecompanylogo\", // Update the URL based on your backend route\r\n        LogoData, // Pass the Blob directly as the request body\r\n\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Content-Type\": \"application/octet-stream\", // Set the content type to indicate a binary stream\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Company Logo updated successfully\");\r\n\r\n        getCompanyLogo();\r\n        // Perform any additional actions or UI updates as needed\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating Company Logo image:\", error);\r\n    }\r\n  };\r\n\r\n  const getCompanyLogo = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/getcompanylogo\", // Update the URL based on your backend route\r\n        { withCredentials: true, responseType: \"arraybuffer\" } // Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Access the binary data from the response\r\n        const LogoData = response.data;\r\n        console.log(\"imagedata\", LogoData);\r\n\r\n        // Convert the ArrayBuffer to a Blob\r\n        const blob = new Blob([LogoData], { type: \"image/jpeg\" }); // Replace 'image/jpeg' with the actual MIME type of your images\r\n\r\n        // Create a Blob URL from the Blob\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        setImageLogo(blobUrl);\r\n        console.log(\"Fetched Company Logo data:\", blobUrl);\r\n\r\n        // Update your UI or perform other actions with the fetched data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Company Logo data:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateCompanyInfo = async (companyinfo) => {\r\n    try {\r\n      const response = await axios.put(\r\n        \"http://localhost:5000/api/updatecompanyinfo\",\r\n        companyinfo,\r\n        { withCredentials: true }\r\n      );\r\n      console.log(companyinfo);\r\n      if (response.status === 200) {\r\n        console.log(response.data.message);\r\n        handleCompanyInfoUpdateState(companyinfo);\r\n        setSuccessMessage(response.data.message);\r\n        setErrorMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error Updating Company Info:\", error);\r\n      setErrorMessage(error.response.data.error);\r\n      setSuccessMessage(\"\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      getCompanyLogo();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  if (!loggedIn) {\r\n    // If the user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-auto\">\r\n        <h2>{companyName} Page</h2>\r\n        <div className=\"dropdown\" data-bs-theme=\"dark\">\r\n          <button\r\n            className=\"btn btn-primary dropdown-toggle\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i className=\"fa fa-edit fa-fw me-1\"></i>Update\r\n          </button>\r\n          <ul\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"dropdownUpdateMenuButton\"\r\n          >\r\n            <li>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowUpdateCompanyLogo(true);\r\n                }}\r\n              >\r\n                Update Logo\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowUpdateCompanyInfo(true);\r\n                }}\r\n              >\r\n                Update Info\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Updatecompanylogo\r\n        showModal={showUpdateCompanyLogoModal}\r\n        imageLogo={imageLogo}\r\n        updateCompanyLogo={updateCompanyLogo}\r\n        handleClose={() => {\r\n          setShowUpdateCompanyLogo(false);\r\n        }}\r\n      />\r\n      <Updatecompanyinfo\r\n        showModal={showUpateCompanyInfo}\r\n        successMessage={successMessage}\r\n        errorMessage={errorMessage}\r\n        updateCompanyInfo={updateCompanyInfo}\r\n        handleClose={() => {\r\n          setShowUpdateCompanyInfo(false);\r\n          setErrorMessage(\"\");\r\n          setSuccessMessage(\"\");\r\n        }}\r\n      />\r\n      <div className=\"card position-relative\">\r\n        <div className=\"card-body\">\r\n          <div className=\"text-center position-relative\">\r\n            {/* Display Profile Image */}\r\n            <img\r\n              src={imageLogo || defaultCompanyLogo}\r\n              alt=\"Profile\"\r\n              className=\"img-fluid rounded-circle\"\r\n              style={{\r\n                width: \"200px\",\r\n                height: \"200px\",\r\n                border: \"2px solid #000\",\r\n              }}\r\n            />\r\n          </div>\r\n          <h2 className=\"text-center mb-0\">{companyName}</h2>\r\n          <p className=\"lead text-center mb-0\">{companyAddress}</p>\r\n          <p className=\"text-muted text-center\">{companyindustry}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}