{"ast":null,"code":"// Usermgmt.js\nimport React,{useState,useEffect}from\"react\";import axios from\"axios\";import{AuthContext}from\"../context/AuthContext\";import{useContext}from\"react\";import{Navigate}from\"react-router-dom\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"bootstrap/dist/js/bootstrap.min.js\";import\"font-awesome/css/font-awesome.min.css\";import UserModal from\"./Addusermodal\";import DeleteModal from\"./Deleteusermodal\";import Detailusermodal from\"./Detailusermodal\";import Editusermodal from\"./Editusermodal\";import Resetpasswordmodal from\"./Resetpasswordmodal\";import defaultCompanyLogo from\"../company/defaultlogo.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Usermgmt=()=>{const{loggedIn,companyName,companyAddress,companyindustry}=useContext(AuthContext);const[users,setUsers]=useState([]);const[searchTerm,setSearchTerm]=useState(\"\");const[showUserModal,setShowUserModal]=useState(false);const[showDeleteUserModal,setShowDeleteUserModal]=useState(false);const[showDetailUserModal,setShowDetailUserModal]=useState(false);const[showEditUserModal,setShowEditUserModal]=useState(false);const[showResetPasswordmodal,setShowResetPasswordModal]=useState(false);const[selectDeleteId,setSelectDeleteId]=useState(\"\");const[selectDeleteUsername,setSelectDeleteUsername]=useState(\"\");const[selectDetailUser,setSelectDetailUser]=useState(\"\");const[selectEditUser,setSelectEditUser]=useState(null);const[selectResetPasswordUser,setSelectResetPasswordUser]=useState(\"\");const[imageLogo,setImageLogo]=useState(null);const[successMessage,setSuccessMessage]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");const fetchUserData=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/getuserdata\",{withCredentials:true});if(response.status===200){setUsers(response.data);console.log(\"Fetched user data:\",response.data);}}catch(error){console.error(\"Error fetching user data:\",error);}};const handleCreateUser=async userData=>{if(!userData.username||!userData.email||!userData.password){// Add validation for other fields if needed\nsetErrorMessage(\"Please fill in all fields.\");return;}try{const response=await axios.post(\"http://localhost:5000/api/register\",{username:userData.username,firstname:userData.firstname,lastname:userData.lastname,password:userData.password,companyname:companyName,companyaddress:companyAddress,industry:companyindustry,email:userData.email});setSuccessMessage(response.data.message);setErrorMessage(\"\");// Clear any previous error message\n// Trigger useEffect by calling fetchUserData\nfetchUserData();}catch(error){setSuccessMessage(\"\");setErrorMessage(error.response.data.error);}};const handleDelete=async userIdToDelete=>{try{const response=await axios.delete(\"http://localhost:5000/api/deleteuser/\".concat(userIdToDelete),{withCredentials:true});if(response.status===200){console.log(response.data.message);// Trigger useEffect by calling fetchUserData\nfetchUserData();}}catch(error){console.error(error.response.data.error);setErrorMessage(error.response.data.error);throw error;}};const handleUpdate=async updatedUserData=>{const userIdToUpdate=selectEditUser.UserID;try{const response=await axios.put(\"http://localhost:5000/api/updateuserdata/\".concat(userIdToUpdate),updatedUserData,{withCredentials:true});if(response.status===200){setSuccessMessage(response.data.message);setErrorMessage(\"\");fetchUserData();}}catch(error){setSuccessMessage(\"\");setErrorMessage(error.response.data.message);}};const getCompanyLogo=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/getcompanylogo\",// Update the URL based on your backend route\n{withCredentials:true,responseType:\"arraybuffer\"}// Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\n);if(response.status===200){// Access the binary data from the response\nconst LogoData=response.data;console.log(\"imagedata\",LogoData);// Convert the ArrayBuffer to a Blob\nconst blob=new Blob([LogoData],{type:\"image/jpeg\"});// Replace 'image/jpeg' with the actual MIME type of your images\n// Create a Blob URL from the Blob\nconst blobUrl=URL.createObjectURL(blob);setImageLogo(blobUrl);console.log(\"Fetched Company Logo data:\",blobUrl);// Update your UI or perform other actions with the fetched data\n}}catch(error){console.error(\"Error fetching Company Logo data:\",error);}};useEffect(()=>{if(loggedIn){fetchUserData();getCompanyLogo();}},[loggedIn]);if(!loggedIn){// If the user is not logged in, redirect to the login page\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}const filteredUsers=users.filter(user=>user&&user.Username&&user.Username.toLowerCase().includes(searchTerm.toLowerCase()));return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid mt-5 p-3 border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{alt:\"\",src:imageLogo||defaultCompanyLogo,className:\"img-fluid rounded-circle company-logo mb-2\",style:{width:\"50px\",height:\"50px\",border:\"2px solid #000\",marginRight:\"10px\"}}),companyName]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by Username\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"form-control me-2\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-primary text-nowrap\",onClick:()=>setShowUserModal(true),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus me-2\",\"aria-hidden\":\"true\"}),\"Add\"]}),/*#__PURE__*/_jsx(UserModal,{showModal:showUserModal,handleClose:()=>{setShowUserModal(false);setErrorMessage(\"\");// Clear error message\nsetSuccessMessage(\"\");},handleCreateUser:handleCreateUser,successMessage:successMessage,errorMessage:errorMessage})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border p-3\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-dark table-striped table-hover table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"User ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"th\",{children:\"UserRole\"}),/*#__PURE__*/_jsx(\"th\",{children:\"UserStatus\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredUsers.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.UserID}),/*#__PURE__*/_jsx(\"td\",{children:user.Username}),/*#__PURE__*/_jsx(\"td\",{children:user.RoleType}),/*#__PURE__*/_jsx(\"td\",{children:user.IsActive===1?\"Active\":\"Inactive\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-success btn-sm me-2\",onClick:()=>{setShowDetailUserModal(true);setSelectDetailUser(user);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-eye\",\"aria-hidden\":\"true\"}),\" Detail\"]}),/*#__PURE__*/_jsx(Detailusermodal,{showModal:showDetailUserModal,selectDetailUser:selectDetailUser,handleClose:()=>{setShowDetailUserModal(false);setSelectDetailUser(\"\");}}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-warning btn-sm me-2\",onClick:()=>{setShowEditUserModal(true);setSelectEditUser(user);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-pencil\",\"aria-hidden\":\"true\"}),\" Edit\"]}),/*#__PURE__*/_jsx(Editusermodal,{showModal:showEditUserModal,selectEditUser:selectEditUser,handleUpdate:handleUpdate,handleClose:()=>{setShowEditUserModal(false);setSelectEditUser(\"\");setErrorMessage(\"\");// Clear error message\nsetSuccessMessage(\"\");},successMessage:successMessage,errorMessage:errorMessage}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-warning btn-sm me-2\",onClick:()=>{setShowResetPasswordModal(true);setSelectResetPasswordUser(user.UserID);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-key\",\"aria-hidden\":\"true\"}),\" Reset\"]}),/*#__PURE__*/_jsx(Resetpasswordmodal,{showModal:showResetPasswordmodal,selectResetPasswordUser:selectResetPasswordUser,handleClose:()=>{setShowResetPasswordModal(false);setSelectResetPasswordUser(\"\");}}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>{setShowDeleteUserModal(true);setSelectDeleteId(user.UserID);setSelectDeleteUsername(user.Username);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-trash\",\"aria-hidden\":\"true\"}),\" Delete\"]}),/*#__PURE__*/_jsx(DeleteModal,{showModal:showDeleteUserModal,handleClose:()=>{setShowDeleteUserModal(false);setSelectDeleteId(\"\");setSelectDeleteUsername(\"\");setErrorMessage(\"\");},handleDelete:handleDelete,selectDeleteId:selectDeleteId,selectDeleteUsername:selectDeleteUsername,errorMessage:errorMessage})]})]},user.UserID))})]})})]});};export default Usermgmt;","map":{"version":3,"names":["React","useState","useEffect","axios","AuthContext","useContext","Navigate","UserModal","DeleteModal","Detailusermodal","Editusermodal","Resetpasswordmodal","defaultCompanyLogo","jsx","_jsx","jsxs","_jsxs","Usermgmt","loggedIn","companyName","companyAddress","companyindustry","users","setUsers","searchTerm","setSearchTerm","showUserModal","setShowUserModal","showDeleteUserModal","setShowDeleteUserModal","showDetailUserModal","setShowDetailUserModal","showEditUserModal","setShowEditUserModal","showResetPasswordmodal","setShowResetPasswordModal","selectDeleteId","setSelectDeleteId","selectDeleteUsername","setSelectDeleteUsername","selectDetailUser","setSelectDetailUser","selectEditUser","setSelectEditUser","selectResetPasswordUser","setSelectResetPasswordUser","imageLogo","setImageLogo","successMessage","setSuccessMessage","errorMessage","setErrorMessage","fetchUserData","response","get","withCredentials","status","data","console","log","error","handleCreateUser","userData","username","email","password","post","firstname","lastname","companyname","companyaddress","industry","message","handleDelete","userIdToDelete","delete","concat","handleUpdate","updatedUserData","userIdToUpdate","UserID","put","getCompanyLogo","responseType","LogoData","blob","Blob","type","blobUrl","URL","createObjectURL","to","filteredUsers","filter","user","Username","toLowerCase","includes","className","children","alt","src","style","width","height","border","marginRight","placeholder","value","onChange","e","target","onClick","showModal","handleClose","map","RoleType","IsActive"],"sources":["C:/Users/Administrator/Desktop/react-express/client/src/usermgmt/Usermgmt.js"],"sourcesContent":["// Usermgmt.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport UserModal from \"./Addusermodal\";\r\nimport DeleteModal from \"./Deleteusermodal\";\r\nimport Detailusermodal from \"./Detailusermodal\";\r\nimport Editusermodal from \"./Editusermodal\";\r\nimport Resetpasswordmodal from \"./Resetpasswordmodal\";\r\n\r\nimport defaultCompanyLogo from \"../company/defaultlogo.png\";\r\n\r\nconst Usermgmt = () => {\r\n  const { loggedIn, companyName, companyAddress, companyindustry } =\r\n    useContext(AuthContext);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showUserModal, setShowUserModal] = useState(false);\r\n  const [showDeleteUserModal, setShowDeleteUserModal] = useState(false);\r\n  const [showDetailUserModal, setShowDetailUserModal] = useState(false);\r\n  const [showEditUserModal, setShowEditUserModal] = useState(false);\r\n  const [showResetPasswordmodal, setShowResetPasswordModal] = useState(false);\r\n  const [selectDeleteId, setSelectDeleteId] = useState(\"\");\r\n  const [selectDeleteUsername, setSelectDeleteUsername] = useState(\"\");\r\n  const [selectDetailUser, setSelectDetailUser] = useState(\"\");\r\n  const [selectEditUser, setSelectEditUser] = useState(null);\r\n  const [selectResetPasswordUser, setSelectResetPasswordUser] = useState(\"\");\r\n  const [imageLogo, setImageLogo] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/getuserdata\",\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setUsers(response.data);\r\n        console.log(\"Fetched user data:\", response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCreateUser = async (userData) => {\r\n    if (!userData.username || !userData.email || !userData.password) {\r\n      // Add validation for other fields if needed\r\n      setErrorMessage(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/register\", {\r\n        username: userData.username,\r\n        firstname: userData.firstname,\r\n        lastname: userData.lastname,\r\n        password: userData.password,\r\n        companyname: companyName,\r\n        companyaddress: companyAddress,\r\n        industry: companyindustry,\r\n        email: userData.email,\r\n      });\r\n\r\n      setSuccessMessage(response.data.message);\r\n      setErrorMessage(\"\"); // Clear any previous error message\r\n      // Trigger useEffect by calling fetchUserData\r\n      fetchUserData();\r\n    } catch (error) {\r\n      setSuccessMessage(\"\");\r\n\r\n      setErrorMessage(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (userIdToDelete) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `http://localhost:5000/api/deleteuser/${userIdToDelete}`,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        console.log(response.data.message);\r\n        // Trigger useEffect by calling fetchUserData\r\n        fetchUserData();\r\n      }\r\n    } catch (error) {\r\n      console.error(error.response.data.error);\r\n      setErrorMessage(error.response.data.error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (updatedUserData) => {\r\n    const userIdToUpdate = selectEditUser.UserID;\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:5000/api/updateuserdata/${userIdToUpdate}`,\r\n        updatedUserData,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSuccessMessage(response.data.message);\r\n        setErrorMessage(\"\");\r\n        fetchUserData();\r\n      }\r\n    } catch (error) {\r\n      setSuccessMessage(\"\");\r\n      setErrorMessage(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const getCompanyLogo = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/getcompanylogo\", // Update the URL based on your backend route\r\n        { withCredentials: true, responseType: \"arraybuffer\" } // Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Access the binary data from the response\r\n        const LogoData = response.data;\r\n        console.log(\"imagedata\", LogoData);\r\n\r\n        // Convert the ArrayBuffer to a Blob\r\n        const blob = new Blob([LogoData], { type: \"image/jpeg\" }); // Replace 'image/jpeg' with the actual MIME type of your images\r\n\r\n        // Create a Blob URL from the Blob\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        setImageLogo(blobUrl);\r\n        console.log(\"Fetched Company Logo data:\", blobUrl);\r\n\r\n        // Update your UI or perform other actions with the fetched data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Company Logo data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      fetchUserData();\r\n      getCompanyLogo();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  if (!loggedIn) {\r\n    // If the user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  const filteredUsers = users.filter(\r\n    (user) =>\r\n      user &&\r\n      user.Username &&\r\n      user.Username.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5 p-3 border\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <div>\r\n          <center>\r\n            <h1>\r\n              <img\r\n                alt=\"\"\r\n                src={imageLogo || defaultCompanyLogo}\r\n                className=\"img-fluid rounded-circle company-logo mb-2\"\r\n                style={{\r\n                  width: \"50px\",\r\n                  height: \"50px\",\r\n                  border: \"2px solid #000\",\r\n                  marginRight: \"10px\",\r\n                }}\r\n              />\r\n              {companyName}\r\n            </h1>\r\n          </center>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by Username\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"form-control me-2\"\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary text-nowrap\"\r\n            onClick={() => setShowUserModal(true)}\r\n          >\r\n            <i className=\"fa fa-plus me-2\" aria-hidden=\"true\"></i>Add\r\n          </button>\r\n          <UserModal\r\n            showModal={showUserModal}\r\n            handleClose={() => {\r\n              setShowUserModal(false);\r\n              setErrorMessage(\"\"); // Clear error message\r\n              setSuccessMessage(\"\");\r\n            }}\r\n            handleCreateUser={handleCreateUser}\r\n            successMessage={successMessage}\r\n            errorMessage={errorMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"border p-3\">\r\n        <table className=\"table table-dark table-striped table-hover table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>User ID</th>\r\n              <th>Username</th>\r\n\r\n              <th>UserRole</th>\r\n              <th>UserStatus</th>\r\n              <th className=\"text-center\">Action</th>\r\n              {/* Add more fields as needed */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map((user) => (\r\n              <tr key={user.UserID}>\r\n                <td>{user.UserID}</td>\r\n                <td>{user.Username}</td>\r\n\r\n                <td>{user.RoleType}</td>\r\n                <td>{user.IsActive === 1 ? \"Active\" : \"Inactive\"}</td>\r\n                <td className=\"text-center\">\r\n                  <button\r\n                    className=\"btn btn-success btn-sm me-2\"\r\n                    onClick={() => {\r\n                      setShowDetailUserModal(true);\r\n                      setSelectDetailUser(user);\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-eye\" aria-hidden=\"true\"></i> Detail\r\n                  </button>\r\n                  <Detailusermodal\r\n                    showModal={showDetailUserModal}\r\n                    selectDetailUser={selectDetailUser}\r\n                    handleClose={() => {\r\n                      setShowDetailUserModal(false);\r\n                      setSelectDetailUser(\"\");\r\n                    }}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-warning btn-sm me-2\"\r\n                    onClick={() => {\r\n                      setShowEditUserModal(true);\r\n                      setSelectEditUser(user);\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edit\r\n                  </button>\r\n                  <Editusermodal\r\n                    showModal={showEditUserModal}\r\n                    selectEditUser={selectEditUser}\r\n                    handleUpdate={handleUpdate}\r\n                    handleClose={() => {\r\n                      setShowEditUserModal(false);\r\n                      setSelectEditUser(\"\");\r\n                      setErrorMessage(\"\"); // Clear error message\r\n                      setSuccessMessage(\"\");\r\n                    }}\r\n                    successMessage={successMessage}\r\n                    errorMessage={errorMessage}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-warning btn-sm me-2\"\r\n                    onClick={() => {\r\n                      setShowResetPasswordModal(true);\r\n                      setSelectResetPasswordUser(user.UserID);\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-key\" aria-hidden=\"true\"></i> Reset\r\n                  </button>\r\n                  <Resetpasswordmodal\r\n                    showModal={showResetPasswordmodal}\r\n                    selectResetPasswordUser={selectResetPasswordUser}\r\n                    handleClose={() => {\r\n                      setShowResetPasswordModal(false);\r\n                      setSelectResetPasswordUser(\"\");\r\n                    }}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={() => {\r\n                      setShowDeleteUserModal(true);\r\n                      setSelectDeleteId(user.UserID);\r\n                      setSelectDeleteUsername(user.Username);\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n                  </button>\r\n                  <DeleteModal\r\n                    showModal={showDeleteUserModal}\r\n                    handleClose={() => {\r\n                      setShowDeleteUserModal(false);\r\n                      setSelectDeleteId(\"\");\r\n                      setSelectDeleteUsername(\"\");\r\n                      setErrorMessage(\"\");\r\n                    }}\r\n                    handleDelete={handleDelete}\r\n                    selectDeleteId={selectDeleteId}\r\n                    selectDeleteUsername={selectDeleteUsername}\r\n                    errorMessage={errorMessage}\r\n                  />\r\n                </td>\r\n                {/* Add more fields as needed */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Add additional features or components related to user management */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Usermgmt;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}