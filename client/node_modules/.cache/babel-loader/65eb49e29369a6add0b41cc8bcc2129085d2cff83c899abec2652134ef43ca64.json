{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\react-express\\\\client\\\\src\\\\mytask\\\\Reportdata.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reportdata = ({\n  showModal,\n  handleClose,\n  TaskID\n}) => {\n  _s();\n  const [reportData, setReportData] = useState([]);\n  const getTaskDetailReport = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/gettaskdetailreport/${TaskID}`, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        console.log(\"Received report data:\", response.data);\n        setReportData(response.data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  }, [TaskID]);\n  const onClose = () => {\n    handleClose();\n  };\n  const arrayToBlobUrl = (array, mimeType) => {\n    const blob = new Blob([Uint8Array.from(array)], {\n      type: mimeType\n    });\n    return URL.createObjectURL(blob);\n  };\n  useEffect(() => {\n    if (showModal) {\n      getTaskDetailReport();\n    }\n  }, [showModal, getTaskDetailReport]);\n  const renderTextDataField = groupedTextData => {\n    if (groupedTextData.length > 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-data-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Common Text Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: groupedTextData[0].TextData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const groupBy = (array, key) => {\n    return array.reduce((result, currentItem) => {\n      (result[currentItem[key]] = result[currentItem[key]] || []).push(currentItem);\n      return result;\n    }, {});\n  };\n  const groupedReportData = groupBy(reportData, \"TextData\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal fade ${showModal ? \"show\" : \"\"}`,\n    style: {\n      display: showModal ? \"block\" : \"none\"\n    },\n    \"data-bs-theme\": \"dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog modal-xl text-white text-center\",\n      role: \"document\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"modal-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-info fa-fw me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), \"Report\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            \"aria-label\": \"Close\",\n            onClick: onClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: Object.keys(groupedReportData).map((groupKey, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [renderTextDataField(groupedReportData[groupKey]), groupedReportData[groupKey].map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [file.ReportType.startsWith(\"image/\") && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"mb-3\",\n                src: arrayToBlobUrl(file.ReportData.data, file.ReportType),\n                alt: `Report ${index}`,\n                style: {\n                  maxWidth: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this), file.ReportType === \"application/pdf\" && /*#__PURE__*/_jsxDEV(\"embed\", {\n                className: \"mb-3\",\n                src: arrayToBlobUrl(file.ReportData.data, file.ReportType),\n                type: \"application/pdf\",\n                style: {\n                  width: \"100%\",\n                  height: \"calc(100vw / 1.414)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Reportdata, \"SRupd155t3dSq+GSoWB6G31OJSE=\");\n_c = Reportdata;\nexport default Reportdata;\nvar _c;\n$RefreshReg$(_c, \"Reportdata\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Reportdata","showModal","handleClose","TaskID","_s","reportData","setReportData","getTaskDetailReport","response","get","withCredentials","status","console","log","data","error","onClose","arrayToBlobUrl","array","mimeType","blob","Blob","Uint8Array","from","type","URL","createObjectURL","renderTextDataField","groupedTextData","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TextData","groupBy","key","reduce","result","currentItem","push","groupedReportData","style","display","role","onClick","Object","keys","map","groupKey","index","file","ReportType","startsWith","src","ReportData","alt","maxWidth","width","height","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/react-express/client/src/mytask/Reportdata.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Reportdata = ({ showModal, handleClose, TaskID }) => {\r\n  const [reportData, setReportData] = useState([]);\r\n\r\n  const getTaskDetailReport = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/api/gettaskdetailreport/${TaskID}`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Received report data:\", response.data);\r\n        setReportData(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  }, [TaskID]);\r\n\r\n  const onClose = () => {\r\n    handleClose();\r\n  };\r\n\r\n  const arrayToBlobUrl = (array, mimeType) => {\r\n    const blob = new Blob([Uint8Array.from(array)], { type: mimeType });\r\n    return URL.createObjectURL(blob);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      getTaskDetailReport();\r\n    }\r\n  }, [showModal, getTaskDetailReport]);\r\n\r\n  const renderTextDataField = (groupedTextData) => {\r\n    if (groupedTextData.length > 1) {\r\n      return (\r\n        <div className=\"text-data-group\">\r\n          <h3>Common Text Data</h3>\r\n          <p>{groupedTextData[0].TextData}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const groupBy = (array, key) => {\r\n    return array.reduce((result, currentItem) => {\r\n      (result[currentItem[key]] = result[currentItem[key]] || []).push(\r\n        currentItem\r\n      );\r\n      return result;\r\n    }, {});\r\n  };\r\n\r\n  const groupedReportData = groupBy(reportData, \"TextData\");\r\n\r\n  return (\r\n    <div\r\n      className={`modal fade ${showModal ? \"show\" : \"\"}`}\r\n      style={{ display: showModal ? \"block\" : \"none\" }}\r\n      data-bs-theme=\"dark\"\r\n    >\r\n      <div\r\n        className=\"modal-dialog modal-xl text-white text-center\"\r\n        role=\"document\"\r\n      >\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">\r\n              <i className=\"fa fa-info fa-fw me-2\"></i>Report\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              aria-label=\"Close\"\r\n              onClick={onClose}\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {Object.keys(groupedReportData).map((groupKey, index) => (\r\n              <div key={index}>\r\n                {renderTextDataField(groupedReportData[groupKey])}\r\n                {groupedReportData[groupKey].map((file, index) => (\r\n                  <div key={index}>\r\n                    {file.ReportType.startsWith(\"image/\") && (\r\n                      <img\r\n                        className=\"mb-3\"\r\n                        src={arrayToBlobUrl(\r\n                          file.ReportData.data,\r\n                          file.ReportType\r\n                        )}\r\n                        alt={`Report ${index}`}\r\n                        style={{ maxWidth: \"100%\" }}\r\n                      />\r\n                    )}\r\n                    {file.ReportType === \"application/pdf\" && (\r\n                      <embed\r\n                        className=\"mb-3\"\r\n                        src={arrayToBlobUrl(\r\n                          file.ReportData.data,\r\n                          file.ReportType\r\n                        )}\r\n                        type=\"application/pdf\"\r\n                        style={{ width: \"100%\", height: \"calc(100vw / 1.414)\" }}\r\n                      />\r\n                    )}\r\n                    {/* Add other conditions for different types of reports */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reportdata;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}