{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\react-express\\\\client\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    handleLogin,\n    handleLogout,\n    loggedIn\n  } = useContext(AuthContext);\n  const checkLoginStatus = useCallback(async () => {\n    console.log(\"Running checkLoginStatus\");\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/check-login\", {\n        withCredentials: true\n      });\n      const {\n        loggedIn,\n        user\n      } = response.data;\n      if (loggedIn) {\n        handleLogin(user.username, user.UserRoleId, user.RoleType, user.CompanyName, user.UserRoleId);\n      } else {\n        handleLogout();\n      }\n    } catch (error) {\n      console.error(\"Error checking login status:\", error.response.data.message);\n    }\n  }, [handleLogin, handleLogout]);\n  useEffect(() => {\n    // Check login status when the component mounts\n    checkLoginStatus();\n  }, [checkLoginStatus]);\n  const checkLogininput = async () => {\n    if (!username || !password) {\n      setErrorMessage(\"Username and password are required\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/login\", {\n        username,\n        password\n      }, {\n        withCredentials: true\n      });\n      const {\n        userid,\n        companyName,\n        username: loggedInUsername,\n        UserRoleId,\n        userroletype\n      } = response.data;\n      handleLogin(loggedInUsername, userid, userroletype, companyName, UserRoleId);\n\n      // Navigate to the home page after successful login\n      navigate(\"/home\");\n    } catch (error) {\n      console.error(\"Login failed:\", error.response.data.message);\n      setErrorMessage(\"Invalid username or password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      username,\n      loggedIn,\n      userid,\n      userroletype,\n      companyName,\n      UserRoleId,\n      handleLogin,\n      handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ZMMc80W7svTXZGCu1QenH5nOcBU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","useNavigate","axios","AuthContext","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","handleLogout","loggedIn","useContext","checkLoginStatus","console","log","response","get","withCredentials","user","data","UserRoleId","RoleType","CompanyName","error","message","checkLogininput","post","userid","companyName","loggedInUsername","userroletype","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/react-express/client/src/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { handleLogin, handleLogout, loggedIn } = useContext(AuthContext);\r\n\r\n  const checkLoginStatus = useCallback(async () => {\r\n    console.log(\"Running checkLoginStatus\");\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/check-login\",\r\n        { withCredentials: true }\r\n      );\r\n      const { loggedIn, user } = response.data;\r\n\r\n      if (loggedIn) {\r\n        handleLogin(\r\n          user.username,\r\n          user.UserRoleId,\r\n          user.RoleType,\r\n          user.CompanyName,\r\n          user.UserRoleId\r\n        );\r\n      } else {\r\n        handleLogout();\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error checking login status:\",\r\n        error.response.data.message\r\n      );\r\n    }\r\n  }, [handleLogin, handleLogout]);\r\n\r\n  useEffect(() => {\r\n    // Check login status when the component mounts\r\n    checkLoginStatus();\r\n  }, [checkLoginStatus]);\r\n\r\n  const checkLogininput = async () => {\r\n    if (!username || !password) {\r\n      setErrorMessage(\"Username and password are required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/login\",\r\n        { username, password },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      const {\r\n        userid,\r\n        companyName,\r\n        username: loggedInUsername,\r\n        UserRoleId,\r\n        userroletype,\r\n      } = response.data;\r\n\r\n      handleLogin(\r\n        loggedInUsername,\r\n        userid,\r\n        userroletype,\r\n        companyName,\r\n        UserRoleId\r\n      );\r\n\r\n      // Navigate to the home page after successful login\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error.response.data.message);\r\n      setErrorMessage(\"Invalid username or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        username,\r\n        loggedIn,\r\n        userid,\r\n        userroletype,\r\n        companyName,\r\n        UserRoleId,\r\n        handleLogin,\r\n        handleLogout,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}