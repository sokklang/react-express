{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\react-express\\\\client\\\\src\\\\archivetask\\\\Archivetask.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Archivetask = () => {\n  var _s = $RefreshSig$();\n  const getArchiveTask = async () => {\n    _s();\n    const [tasks, setTasks] = useState([]);\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/getmytasks\", {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        console.log(\"MyTasks Fetch Successfully\", response.data);\n        setTasks(response.data); // Set tasks directly from response data\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.response.data.error);\n    }\n  };\n  _s(getArchiveTask, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Archivetask\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_c = Archivetask;\nexport default Archivetask;\nvar _c;\n$RefreshReg$(_c, \"Archivetask\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Archivetask","_s","$RefreshSig$","getArchiveTask","tasks","setTasks","useState","response","get","withCredentials","status","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/react-express/client/src/archivetask/Archivetask.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Archivetask = () => {\r\n  const getArchiveTask = async () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/getmytasks\", {\r\n        withCredentials: true,\r\n      });\r\n      if (response.status === 200) {\r\n        console.log(\"MyTasks Fetch Successfully\", response.data);\r\n        setTasks(response.data); // Set tasks directly from response data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return <div>Archivetask</div>;\r\n};\r\n\r\nexport default Archivetask;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxB,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAAAF,EAAA;IACjC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sCAAsC,EAAE;QACvEC,eAAe,EAAE;MACnB,CAAC,CAAC;MACF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,QAAQ,CAACM,IAAI,CAAC;QACxDR,QAAQ,CAACE,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACP,QAAQ,CAACM,IAAI,CAACC,KAAK,CAAC;IACnE;EACF,CAAC;EAACb,EAAA,CAbIE,cAAc;EAepB,oBAAOJ,OAAA;IAAAgB,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC/B,CAAC;AAACC,EAAA,GAjBIpB,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}