{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\react-express\\\\client\\\\src\\\\Task.js\",\n  _s = $RefreshSig$();\nimport { Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  loggedIn\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([\n  // Sample task data (replace with actual data from your system)\n  {\n    id: 1,\n    title: \"Task 1\",\n    description: \"Complete task 1 description...\",\n    dueDate: \"2023-12-10\",\n    priority: \"High\",\n    status: \"In Progress\"\n  }]);\n  const handleAddTask = () => {\n    // Add your logic to handle adding a new task\n    console.log(\"Add Task clicked\");\n  };\n  const handleEditTask = taskId => {\n    // Add your logic to handle editing a task\n    console.log(`Edit Task clicked for task ID: ${taskId}`);\n  };\n  const handleSaveTask = () => {\n    // Add your logic to handle saving a task\n    console.log(\"Save Task clicked\");\n  };\n  if (!loggedIn) {\n    // If the user is not logged in, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the Task component content when the user is logged in\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning btn-sm\",\n              onClick: () => handleEditTask(task.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"frzHC11kYAOs3MIq85eDl89/45s=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["Navigate","useState","jsxDEV","_jsxDEV","Task","loggedIn","_s","tasks","setTasks","id","title","description","dueDate","priority","status","handleAddTask","console","log","handleEditTask","taskId","handleSaveTask","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","task","onClick","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/react-express/client/src/Task.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst Task = ({ loggedIn }) => {\r\n  const [tasks, setTasks] = useState([\r\n    // Sample task data (replace with actual data from your system)\r\n    {\r\n      id: 1,\r\n      title: \"Task 1\",\r\n      description: \"Complete task 1 description...\",\r\n      dueDate: \"2023-12-10\",\r\n      priority: \"High\",\r\n      status: \"In Progress\",\r\n    },\r\n  ]);\r\n\r\n  const handleAddTask = () => {\r\n    // Add your logic to handle adding a new task\r\n    console.log(\"Add Task clicked\");\r\n  };\r\n\r\n  const handleEditTask = (taskId) => {\r\n    // Add your logic to handle editing a task\r\n    console.log(`Edit Task clicked for task ID: ${taskId}`);\r\n  };\r\n\r\n  const handleSaveTask = () => {\r\n    // Add your logic to handle saving a task\r\n    console.log(\"Save Task clicked\");\r\n  };\r\n  if (!loggedIn) {\r\n    // If the user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // Render the Task component content when the user is logged in\r\n  return (\r\n    <div>\r\n      <h2>Task Management</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Due Date</th>\r\n            <th>Priority</th>\r\n            <th>Status</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task) => (\r\n            <tr key={task.id}>\r\n              <td>{task.title}</td>\r\n              <td>{task.description}</td>\r\n              <td>{task.dueDate}</td>\r\n              <td>{task.priority}</td>\r\n              <td>{task.status}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-warning btn-sm\"\r\n                  onClick={() => handleEditTask(task.id)}\r\n                >\r\n                  Edit\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <button className=\"btn btn-primary\" onClick={handleAddTask}>\r\n        Add Task\r\n      </button>\r\n\r\n      {/* Add Task Modal */}\r\n      {/* (Similar structure as the Bootstrap example, but using React state and components) */}\r\n\r\n      {/* Edit Task Modal */}\r\n      {/* (Similar structure as the Bootstrap example, but using React state and components) */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;EACjC;EACA;IACEQ,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,gCAAgC;IAC7CC,OAAO,EAAE,YAAY;IACrBC,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE;EACV,CAAC,CACF,CAAC;EAEF,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACjC,CAAC;EAED,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC;IACAH,OAAO,CAACC,GAAG,CAAE,kCAAiCE,MAAO,EAAC,CAAC;EACzD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACAJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC;EACD,IAAI,CAACZ,QAAQ,EAAE;IACb;IACA,oBAAOF,OAAA,CAACH,QAAQ;MAACqB,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtB,OAAA;MAAOwB,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACtBvB,OAAA;QAAAuB,QAAA,eACEvB,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAI;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdtB,OAAA;YAAAuB,QAAA,EAAI;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBtB,OAAA;YAAAuB,QAAA,EAAI;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBtB,OAAA;YAAAuB,QAAA,EAAI;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBtB,OAAA;YAAAuB,QAAA,EAAI;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACftB,OAAA;YAAAuB,QAAA,EAAI;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRtB,OAAA;QAAAuB,QAAA,EACGnB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACd1B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAKG,IAAI,CAACnB;UAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBtB,OAAA;YAAAuB,QAAA,EAAKG,IAAI,CAAClB;UAAW;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BtB,OAAA;YAAAuB,QAAA,EAAKG,IAAI,CAACjB;UAAO;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBtB,OAAA;YAAAuB,QAAA,EAAKG,IAAI,CAAChB;UAAQ;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBtB,OAAA;YAAAuB,QAAA,EAAKG,IAAI,CAACf;UAAM;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBtB,OAAA;YAAAuB,QAAA,eACEvB,OAAA;cACEwB,SAAS,EAAC,wBAAwB;cAClCG,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAACW,IAAI,CAACpB,EAAE,CAAE;cAAAiB,QAAA,EACxC;YAED;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GAbEI,IAAI,CAACpB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAERtB,OAAA;MAAQwB,SAAS,EAAC,iBAAiB;MAACG,OAAO,EAAEf,aAAc;MAAAW,QAAA,EAAC;IAE5D;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAON,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/EIF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAiFV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}