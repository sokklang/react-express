{"ast":null,"code":"// Home.js\nimport{Navigate}from\"react-router-dom\";import{useContext,useEffect,useState}from\"react\";import{AuthContext}from\"../context/AuthContext\";import axios from\"axios\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"bootstrap/dist/js/bootstrap.min.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const{username,firstname,lastname,email,loggedIn,userid,userroletype,companyName,companyAddress,companyindustry,UserRoleId}=useContext(AuthContext);const[imageLogo,setImageLogo]=useState(null);const[profileImage,setProfileImage]=useState(null);const getCompanyLogo=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/getcompanylogo\",// Update the URL based on your backend route\n{withCredentials:true,responseType:\"arraybuffer\"}// Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\n);if(response.status===200){// Access the binary data from the response\nconst LogoData=response.data;console.log(\"imagedata\",LogoData);// Convert the ArrayBuffer to a Blob\nconst blob=new Blob([LogoData],{type:\"image/jpeg\"});// Replace 'image/jpeg' with the actual MIME type of your images\n// Create a Blob URL from the Blob\nconst blobUrl=URL.createObjectURL(blob);setImageLogo(blobUrl);console.log(\"Fetched Company Logo data:\",blobUrl);// Update your UI or perform other actions with the fetched data\n}}catch(error){console.error(\"Error fetching Company Logo data:\",error);}};const fetchUserProfile=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/getuserprofile\",// Update the URL based on your backend route\n{withCredentials:true,responseType:\"arraybuffer\"}// Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\n);if(response.status===200){// Access the binary data from the response\nconst imageData=response.data;console.log(\"imagedata\",imageData);// Convert the ArrayBuffer to a Blob\nconst blob=new Blob([imageData],{type:\"image/jpeg\"});// Replace 'image/jpeg' with the actual MIME type of your images\n// Create a Blob URL from the Blob\nconst blobUrl=URL.createObjectURL(blob);setProfileImage(blobUrl);console.log(\"Fetched user profile image data:\",blobUrl);// Update your UI or perform other actions with the fetched data\n}}catch(error){console.error(\"Error fetching user profile data:\",error);}};useEffect(()=>{if(loggedIn){fetchUserProfile();getCompanyLogo();}},[loggedIn]);if(!loggedIn){// If the user is not logged in, redirect to the login page\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"bg-light\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container mt-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header bg-primary text-white\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome, \",username,\"!\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body \",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"User Information:\"}),profileImage&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"img\",{src:profileImage,alt:\"User Profile\",className:\"img-fluid rounded-circle\",style:{width:\"150px\",height:\"150px\"}})}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Username:\"}),\" \",username,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",firstname,\" \",lastname,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",email,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"User ID:\"}),\" \",userid,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Role Type:\"}),\" \",userroletype,\" \",/*#__PURE__*/_jsx(\"br\",{})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Company Information:\"}),imageLogo&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"img\",{src:imageLogo,alt:\"Company Logo\",className:\"img-fluid rounded-circle\",style:{maxHeight:\"150px\"}})}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Company Name:\"}),\" \",companyName,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Company Address:\"}),\" \",companyAddress,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Industry:\"}),\" \",companyindustry,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"User Role ID:\"}),\" \",UserRoleId,\" \",/*#__PURE__*/_jsx(\"br\",{})]})]})]})})]})})})})});};export default Home;","map":{"version":3,"names":["Navigate","useContext","useEffect","useState","AuthContext","axios","jsx","_jsx","jsxs","_jsxs","Home","username","firstname","lastname","email","loggedIn","userid","userroletype","companyName","companyAddress","companyindustry","UserRoleId","imageLogo","setImageLogo","profileImage","setProfileImage","getCompanyLogo","response","get","withCredentials","responseType","status","LogoData","data","console","log","blob","Blob","type","blobUrl","URL","createObjectURL","error","fetchUserProfile","imageData","to","className","children","src","alt","style","width","height","maxHeight"],"sources":["C:/Users/Administrator/Desktop/react-express/client/src/home/Home.js"],"sourcesContent":["// Home.js\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    username,\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    loggedIn,\r\n    userid,\r\n    userroletype,\r\n    companyName,\r\n    companyAddress,\r\n    companyindustry,\r\n    UserRoleId,\r\n  } = useContext(AuthContext);\r\n\r\n  const [imageLogo, setImageLogo] = useState(null);\r\n  const [profileImage, setProfileImage] = useState(null);\r\n\r\n  const getCompanyLogo = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/getcompanylogo\", // Update the URL based on your backend route\r\n        { withCredentials: true, responseType: \"arraybuffer\" } // Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Access the binary data from the response\r\n        const LogoData = response.data;\r\n        console.log(\"imagedata\", LogoData);\r\n\r\n        // Convert the ArrayBuffer to a Blob\r\n        const blob = new Blob([LogoData], { type: \"image/jpeg\" }); // Replace 'image/jpeg' with the actual MIME type of your images\r\n\r\n        // Create a Blob URL from the Blob\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        setImageLogo(blobUrl);\r\n        console.log(\"Fetched Company Logo data:\", blobUrl);\r\n\r\n        // Update your UI or perform other actions with the fetched data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Company Logo data:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/getuserprofile\", // Update the URL based on your backend route\r\n        { withCredentials: true, responseType: \"arraybuffer\" } // Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Access the binary data from the response\r\n        const imageData = response.data;\r\n        console.log(\"imagedata\", imageData);\r\n\r\n        // Convert the ArrayBuffer to a Blob\r\n        const blob = new Blob([imageData], { type: \"image/jpeg\" }); // Replace 'image/jpeg' with the actual MIME type of your images\r\n\r\n        // Create a Blob URL from the Blob\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        setProfileImage(blobUrl);\r\n        console.log(\"Fetched user profile image data:\", blobUrl);\r\n\r\n        // Update your UI or perform other actions with the fetched data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user profile data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      fetchUserProfile();\r\n      getCompanyLogo();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  if (!loggedIn) {\r\n    // If the user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-light\">\r\n      {/* Main Content */}\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h2>Welcome, {username}!</h2>\r\n              </div>\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <h5>User Information:</h5>\r\n                    {/* Render User Profile Image */}\r\n                    {profileImage && (\r\n                      <div className=\"mb-3\">\r\n                        <img\r\n                          src={profileImage}\r\n                          alt=\"User Profile\"\r\n                          className=\"img-fluid rounded-circle\"\r\n                          style={{ width: \"150px\", height: \"150px\" }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <p>\r\n                      <strong>Username:</strong> {username} <br />\r\n                      <strong>Name:</strong> {firstname} {lastname} <br />\r\n                      <strong>Email:</strong> {email} <br />\r\n                      <strong>User ID:</strong> {userid} <br />\r\n                      <strong>Role Type:</strong> {userroletype} <br />\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <h5>Company Information:</h5>\r\n                    {/* Render Company Logo */}\r\n                    {imageLogo && (\r\n                      <div className=\"mb-3\">\r\n                        <img\r\n                          src={imageLogo}\r\n                          alt=\"Company Logo\"\r\n                          className=\"img-fluid rounded-circle\"\r\n                          style={{ maxHeight: \"150px\" }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <p>\r\n                      <strong>Company Name:</strong> {companyName} <br />\r\n                      <strong>Company Address:</strong> {companyAddress} <br />\r\n                      <strong>Industry:</strong> {companyindustry} <br />\r\n                      <strong>User Role ID:</strong> {UserRoleId} <br />\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* You can add more content to your home page here */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACvD,OAASC,WAAW,KAAQ,wBAAwB,CACpD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,sCAAsC,CAC7C,MAAO,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CACJC,QAAQ,CACRC,SAAS,CACTC,QAAQ,CACRC,KAAK,CACLC,QAAQ,CACRC,MAAM,CACNC,YAAY,CACZC,WAAW,CACXC,cAAc,CACdC,eAAe,CACfC,UACF,CAAC,CAAGpB,UAAU,CAACG,WAAW,CAAC,CAE3B,KAAM,CAACkB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACqB,YAAY,CAAEC,eAAe,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAEtD,KAAM,CAAAuB,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACuB,GAAG,CAC9B,0CAA0C,CAAE;AAC5C,CAAEC,eAAe,CAAE,IAAI,CAAEC,YAAY,CAAE,aAAc,CAAE;AACzD,CAAC,CAED,GAAIH,QAAQ,CAACI,MAAM,GAAK,GAAG,CAAE,CAC3B;AACA,KAAM,CAAAC,QAAQ,CAAGL,QAAQ,CAACM,IAAI,CAC9BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAEH,QAAQ,CAAC,CAElC;AACA,KAAM,CAAAI,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACL,QAAQ,CAAC,CAAE,CAAEM,IAAI,CAAE,YAAa,CAAC,CAAC,CAAE;AAE3D;AACA,KAAM,CAAAC,OAAO,CAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAEzCb,YAAY,CAACgB,OAAO,CAAC,CACrBL,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEI,OAAO,CAAC,CAElD;AACF,CACF,CAAE,MAAOG,KAAK,CAAE,CACdR,OAAO,CAACQ,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAC3D,CACF,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACuB,GAAG,CAC9B,0CAA0C,CAAE;AAC5C,CAAEC,eAAe,CAAE,IAAI,CAAEC,YAAY,CAAE,aAAc,CAAE;AACzD,CAAC,CAED,GAAIH,QAAQ,CAACI,MAAM,GAAK,GAAG,CAAE,CAC3B;AACA,KAAM,CAAAa,SAAS,CAAGjB,QAAQ,CAACM,IAAI,CAC/BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAES,SAAS,CAAC,CAEnC;AACA,KAAM,CAAAR,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACO,SAAS,CAAC,CAAE,CAAEN,IAAI,CAAE,YAAa,CAAC,CAAC,CAAE;AAE5D;AACA,KAAM,CAAAC,OAAO,CAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAEzCX,eAAe,CAACc,OAAO,CAAC,CACxBL,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEI,OAAO,CAAC,CAExD;AACF,CACF,CAAE,MAAOG,KAAK,CAAE,CACdR,OAAO,CAACQ,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAC3D,CACF,CAAC,CAEDxC,SAAS,CAAC,IAAM,CACd,GAAIa,QAAQ,CAAE,CACZ4B,gBAAgB,CAAC,CAAC,CAClBjB,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAAE,CAACX,QAAQ,CAAC,CAAC,CAEd,GAAI,CAACA,QAAQ,CAAE,CACb;AACA,mBAAOR,IAAA,CAACP,QAAQ,EAAC6C,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,mBACEtC,IAAA,QAAKuC,SAAS,CAAC,UAAU,CAAAC,QAAA,cAEvBxC,IAAA,QAAKuC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BxC,IAAA,QAAKuC,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cACzCxC,IAAA,QAAKuC,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBtC,KAAA,QAAKqC,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBxC,IAAA,QAAKuC,SAAS,CAAC,mCAAmC,CAAAC,QAAA,cAChDtC,KAAA,OAAAsC,QAAA,EAAI,WAAS,CAACpC,QAAQ,CAAC,GAAC,EAAI,CAAC,CAC1B,CAAC,cACNJ,IAAA,QAAKuC,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBtC,KAAA,QAAKqC,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBtC,KAAA,QAAKqC,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBxC,IAAA,OAAAwC,QAAA,CAAI,mBAAiB,CAAI,CAAC,CAEzBvB,YAAY,eACXjB,IAAA,QAAKuC,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBxC,IAAA,QACEyC,GAAG,CAAExB,YAAa,CAClByB,GAAG,CAAC,cAAc,CAClBH,SAAS,CAAC,0BAA0B,CACpCI,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,OAAQ,CAAE,CAC5C,CAAC,CACC,CACN,cACD3C,KAAA,MAAAsC,QAAA,eACExC,IAAA,WAAAwC,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAACpC,QAAQ,CAAC,GAAC,cAAAJ,IAAA,QAAK,CAAC,cAC5CA,IAAA,WAAAwC,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACnC,SAAS,CAAC,GAAC,CAACC,QAAQ,CAAC,GAAC,cAAAN,IAAA,QAAK,CAAC,cACpDA,IAAA,WAAAwC,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAACjC,KAAK,CAAC,GAAC,cAAAP,IAAA,QAAK,CAAC,cACtCA,IAAA,WAAAwC,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAC/B,MAAM,CAAC,GAAC,cAAAT,IAAA,QAAK,CAAC,cACzCA,IAAA,WAAAwC,QAAA,CAAQ,YAAU,CAAQ,CAAC,IAAC,CAAC9B,YAAY,CAAC,GAAC,cAAAV,IAAA,QAAK,CAAC,EAChD,CAAC,EACD,CAAC,cACNE,KAAA,QAAKqC,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBxC,IAAA,OAAAwC,QAAA,CAAI,sBAAoB,CAAI,CAAC,CAE5BzB,SAAS,eACRf,IAAA,QAAKuC,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBxC,IAAA,QACEyC,GAAG,CAAE1B,SAAU,CACf2B,GAAG,CAAC,cAAc,CAClBH,SAAS,CAAC,0BAA0B,CACpCI,KAAK,CAAE,CAAEG,SAAS,CAAE,OAAQ,CAAE,CAC/B,CAAC,CACC,CACN,cACD5C,KAAA,MAAAsC,QAAA,eACExC,IAAA,WAAAwC,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAAC7B,WAAW,CAAC,GAAC,cAAAX,IAAA,QAAK,CAAC,cACnDA,IAAA,WAAAwC,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,IAAC,CAAC5B,cAAc,CAAC,GAAC,cAAAZ,IAAA,QAAK,CAAC,cACzDA,IAAA,WAAAwC,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAC3B,eAAe,CAAC,GAAC,cAAAb,IAAA,QAAK,CAAC,cACnDA,IAAA,WAAAwC,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAAC1B,UAAU,CAAC,GAAC,cAAAd,IAAA,QAAK,CAAC,EACjD,CAAC,EACD,CAAC,EACH,CAAC,CAGH,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}