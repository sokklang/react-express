{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\react-express\\\\client\\\\src\\\\home\\\\Home.js\",\n  _s = $RefreshSig$();\n// Home.js\nimport { Navigate } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    username,\n    firstname,\n    lastname,\n    email,\n    loggedIn,\n    userid,\n    userroletype,\n    companyName,\n    companyAddress,\n    companyindustry,\n    UserRoleId\n  } = useContext(AuthContext);\n  const getCompanyLogo = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/getcompanylogo\",\n      // Update the URL based on your backend route\n      {\n        withCredentials: true,\n        responseType: \"arraybuffer\"\n      } // Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\n      );\n      if (response.status === 200) {\n        // Access the binary data from the response\n        const LogoData = response.data;\n        console.log(\"imagedata\", LogoData);\n\n        // Convert the ArrayBuffer to a Blob\n        const blob = new Blob([LogoData], {\n          type: \"image/jpeg\"\n        }); // Replace 'image/jpeg' with the actual MIME type of your images\n\n        // Create a Blob URL from the Blob\n        const blobUrl = URL.createObjectURL(blob);\n        setImageLogo(blobUrl);\n        console.log(\"Fetched Company Logo data:\", blobUrl);\n\n        // Update your UI or perform other actions with the fetched data\n      }\n    } catch (error) {\n      console.error(\"Error fetching Company Logo data:\", error);\n    }\n  };\n  useEffect(() => {\n    if (loggedIn) {\n      getCompanyLogo();\n    }\n  }, [loggedIn]);\n  if (!loggedIn) {\n    // If the user is not logged in, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-primary text-white\",\n              children: [\"Welcome, \", username, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Hello, username: \", username, \" firstname: \", firstname, \" lastname:\", \" \", lastname, \" email : \", email, \" ! Your UserId is \", userid, \" and RoleType is \", userroletype, \" . Welcome back to companyname :\", companyName, \" companyAddress :\", companyAddress, \" and companyindustry \", companyindustry, \". UserRoleId = \", UserRoleId, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"woJWl+xvFbMpvHL6PVH6yrq865c=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Navigate","useContext","useEffect","AuthContext","axios","jsxDEV","_jsxDEV","Home","_s","username","firstname","lastname","email","loggedIn","userid","userroletype","companyName","companyAddress","companyindustry","UserRoleId","getCompanyLogo","response","get","withCredentials","responseType","status","LogoData","data","console","log","blob","Blob","type","blobUrl","URL","createObjectURL","setImageLogo","error","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/react-express/client/src/home/Home.js"],"sourcesContent":["// Home.js\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    username,\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    loggedIn,\r\n    userid,\r\n    userroletype,\r\n    companyName,\r\n    companyAddress,\r\n    companyindustry,\r\n    UserRoleId,\r\n  } = useContext(AuthContext);\r\n\r\n  const getCompanyLogo = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/getcompanylogo\", // Update the URL based on your backend route\r\n        { withCredentials: true, responseType: \"arraybuffer\" } // Set the responseType to 'arraybuffer' to receive the data as an ArrayBuffer\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Access the binary data from the response\r\n        const LogoData = response.data;\r\n        console.log(\"imagedata\", LogoData);\r\n\r\n        // Convert the ArrayBuffer to a Blob\r\n        const blob = new Blob([LogoData], { type: \"image/jpeg\" }); // Replace 'image/jpeg' with the actual MIME type of your images\r\n\r\n        // Create a Blob URL from the Blob\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        setImageLogo(blobUrl);\r\n        console.log(\"Fetched Company Logo data:\", blobUrl);\r\n\r\n        // Update your UI or perform other actions with the fetched data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Company Logo data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      getCompanyLogo();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  if (!loggedIn) {\r\n    // If the user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Main Content */}\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                Welcome, {username}!\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">\r\n                  Hello, username: {username} firstname: {firstname} lastname:{\" \"}\r\n                  {lastname} email : {email} ! Your UserId is {userid} and\r\n                  RoleType is {userroletype} . Welcome back to companyname :\r\n                  {companyName} companyAddress :{companyAddress} and\r\n                  companyindustry {companyindustry}. UserRoleId = {UserRoleId}.\r\n                </p>\r\n                {/* You can add the content of your home page here */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}