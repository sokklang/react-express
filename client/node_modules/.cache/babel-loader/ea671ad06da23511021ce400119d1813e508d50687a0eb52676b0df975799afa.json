{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-express\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userid, setUserId] = useState(\"\");\n  const [userroletype, setUserRoleType] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [companyAddress, setCompanyAddress] = useState(\"\");\n  const [companyindustry, setCompanyIndustry] = useState(\"\");\n  const [UserRoleId, setUserRoleId] = useState(\"\");\n  const [companyId, setCompanyId] = useState(\"\");\n  const handleLogin = (loggedInUsername, loggedInFirstname, loggedInLastname, loggedInEmail, loggedInUserId, loggedInUserRoleType, loggedInCompanyName, loggedInCompanyAddress, loggedInCompanyIndustry, loggedInUserRoleId) => {\n    setUsername(loggedInUsername);\n    setFirstname(loggedInFirstname);\n    setLastname(loggedInLastname);\n    setEmail(loggedInEmail);\n    setUserId(loggedInUserId);\n    setUserRoleType(loggedInUserRoleType);\n    setLoggedIn(true);\n    setCompanyName(loggedInCompanyName);\n    setCompanyAddress(loggedInCompanyAddress);\n    setCompanyIndustry(loggedInCompanyIndustry);\n    setUserRoleId(loggedInUserRoleId);\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/logout\", {}, {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        setUsername(\"\");\n        setFirstname(\"\");\n        setLastname(\"\");\n        setEmail(\"\");\n        setUserId(\"\");\n        setUserRoleType(\"\");\n        setLoggedIn(false);\n        setCompanyName(\"\");\n        setCompanyAddress(\"\");\n        setCompanyIndustry(\"\");\n        setUserRoleId(\"\");\n      }\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n    }\n  };\n  const handleSelfUpdate = updatedInfo => {\n    setFirstname(updatedInfo.FirstName || firstname);\n    setLastname(updatedInfo.LastName || lastname);\n    setEmail(updatedInfo.Email || email);\n  };\n  const handleCompanyInfoUpdateState = updatedInfo => {\n    setCompanyAddress(updatedInfo.companyAddress || companyAddress);\n    setCompanyIndustry(updatedInfo.companyIndustry || companyindustry);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      username,\n      firstname,\n      lastname,\n      email,\n      loggedIn,\n      userid,\n      userroletype,\n      companyName,\n      companyAddress,\n      companyindustry,\n      UserRoleId,\n      handleLogin,\n      handleLogout,\n      handleSelfUpdate,\n      handleCompanyInfoUpdateState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mDtvT56GIURza0bYSxDbpiQfN+Y=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","username","setUsername","firstname","setFirstname","lastname","setLastname","email","setEmail","loggedIn","setLoggedIn","userid","setUserId","userroletype","setUserRoleType","companyName","setCompanyName","companyAddress","setCompanyAddress","companyindustry","setCompanyIndustry","UserRoleId","setUserRoleId","companyId","setCompanyId","handleLogin","loggedInUsername","loggedInFirstname","loggedInLastname","loggedInEmail","loggedInUserId","loggedInUserRoleType","loggedInCompanyName","loggedInCompanyAddress","loggedInCompanyIndustry","loggedInUserRoleId","handleLogout","response","post","withCredentials","data","success","error","console","handleSelfUpdate","updatedInfo","FirstName","LastName","Email","handleCompanyInfoUpdateState","companyIndustry","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/react-express/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userid, setUserId] = useState(\"\");\r\n  const [userroletype, setUserRoleType] = useState(\"\");\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [companyAddress, setCompanyAddress] = useState(\"\");\r\n  const [companyindustry, setCompanyIndustry] = useState(\"\");\r\n  const [UserRoleId, setUserRoleId] = useState(\"\");\r\n  const [companyId, setCompanyId] = useState(\"\");\r\n\r\n  const handleLogin = (\r\n    loggedInUsername,\r\n    loggedInFirstname,\r\n    loggedInLastname,\r\n    loggedInEmail,\r\n    loggedInUserId,\r\n    loggedInUserRoleType,\r\n    loggedInCompanyName,\r\n    loggedInCompanyAddress,\r\n    loggedInCompanyIndustry,\r\n    loggedInUserRoleId\r\n  ) => {\r\n    setUsername(loggedInUsername);\r\n    setFirstname(loggedInFirstname);\r\n    setLastname(loggedInLastname);\r\n    setEmail(loggedInEmail);\r\n    setUserId(loggedInUserId);\r\n    setUserRoleType(loggedInUserRoleType);\r\n    setLoggedIn(true);\r\n    setCompanyName(loggedInCompanyName);\r\n    setCompanyAddress(loggedInCompanyAddress);\r\n    setCompanyIndustry(loggedInCompanyIndustry);\r\n    setUserRoleId(loggedInUserRoleId);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/logout\",\r\n        {},\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setUsername(\"\");\r\n        setFirstname(\"\");\r\n        setLastname(\"\");\r\n        setEmail(\"\");\r\n        setUserId(\"\");\r\n        setUserRoleType(\"\");\r\n        setLoggedIn(false);\r\n        setCompanyName(\"\");\r\n        setCompanyAddress(\"\");\r\n        setCompanyIndustry(\"\");\r\n        setUserRoleId(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSelfUpdate = (updatedInfo) => {\r\n    setFirstname(updatedInfo.FirstName || firstname);\r\n    setLastname(updatedInfo.LastName || lastname);\r\n    setEmail(updatedInfo.Email || email);\r\n  };\r\n\r\n  const handleCompanyInfoUpdateState = (updatedInfo) => {\r\n    setCompanyAddress(updatedInfo.companyAddress || companyAddress);\r\n    setCompanyIndustry(updatedInfo.companyIndustry || companyindustry);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        username,\r\n        firstname,\r\n        lastname,\r\n        email,\r\n        loggedIn,\r\n        userid,\r\n        userroletype,\r\n        companyName,\r\n        companyAddress,\r\n        companyindustry,\r\n        UserRoleId,\r\n        handleLogin,\r\n        handleLogout,\r\n        handleSelfUpdate,\r\n        handleCompanyInfoUpdateState,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}