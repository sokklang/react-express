{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-express\\\\client\\\\src\\\\assigntask\\\\Assigntask.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Assigntask = ({}) => {\n  _s();\n  const {\n    loggedIn\n  } = useContext(AuthContext);\n  if (!loggedIn) {\n    // If the user is not logged in, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Assigntask\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_s(Assigntask, \"BqpBbvcR7D05G3CArRyJxrdORYE=\");\n_c = Assigntask;\nexport default Assigntask;\nvar _c;\n$RefreshReg$(_c, \"Assigntask\");","map":{"version":3,"names":["React","useContext","AuthContext","Navigate","axios","jsxDEV","_jsxDEV","Assigntask","_s","loggedIn","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/react-express/client/src/assigntask/Assigntask.js"],"sourcesContent":["import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nconst Assigntask = ({}) => {\r\n  const { loggedIn } = useContext(AuthContext);\r\n\r\n  if (!loggedIn) {\r\n    // If the user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  return <div>Assigntask</div>;\r\n};\r\n\r\nexport default Assigntask;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,sCAAsC;AAC7C,OAAO,oCAAoC;AAC3C,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAC,CAAC,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAS,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAE5C,IAAI,CAACO,QAAQ,EAAE;IACb;IACA,oBAAOH,OAAA,CAACH,QAAQ;MAACO,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EACA,oBAAOR,OAAA;IAAAS,QAAA,EAAK;EAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC9B,CAAC;AAACN,EAAA,CARID,UAAU;AAAAS,EAAA,GAAVT,UAAU;AAUhB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}